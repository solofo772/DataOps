# DNSmasq configuration for internal DNS resolution

# Listen only on the WireGuard network interface
interface=eth0
bind-interfaces

# Domain and IP mappings
address=/minio.votre-domaine.com/10.8.0.3
address=/webapp.votre-domaine.com/10.8.0.4
address=/vpn.votre-domaine.com/10.8.0.1

# Forward other DNS requests to external DNS servers
server=1.1.1.1
server=8.8.8.8

version: '3.8'

services:
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    environment:
      - LANG=de
      - WG_HOST=192.168.1.131
#      - PASSWORD=123456789
      - PORT=51821
      - WG_PORT=51820
    volumes:
      - ~/.wg-easy:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
      net.ipv4.ip_forward: 1
    networks:
      wg-net:
    restart: unless-stopped

networks:
  wg-net:
    driver: bridge   


http:
  middlewares:
    vpn-restricted:
      ipWhiteList:
        sourceRange:
          - "10.8.0.0/24"  # Sous-réseau du VPN WireGuard

  routers:
    kafdrop-router:
      rule: "Host(`kafdrop.lesableblanc-manambato.mg`)"
      service: kafdrop-service
      middlewares:
        - "vpn-restricted"  # Appliquer la restriction IP VPN

    flink-router:
      rule: "Host(`flink.lesableblanc-manambato.mg`)"
      service: flink-service
      middlewares:
        - "vpn-restricted"  # Appliquer la restriction IP VPN


# Pour Kafdrop (port 9000)
iptables -A INPUT -p tcp --dport 9000 -s 10.8.0.0/24 -j ACCEPT
iptables -A INPUT -p tcp --dport 9000 -j REJECT

# Pour Flink (port 8082)
iptables -A INPUT -p tcp --dport 8082 -s 10.8.0.0/24 -j ACCEPT
iptables -A INPUT -p tcp --dport 8082 -j REJECT


global:
  checkNewVersion: true
  sendAnonymousUsage: false

# serversTransport:
#   insecureSkipVerify: true

entryPoints:
  # Not used in apps, but redirect everything from HTTP to HTTPS
  http:
    address: :80
    forwardedHeaders:
      trustedIPs: &trustedIps
        - 173.245.48.0/2
    
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https

  # HTTPS endpoint, with domain wildcard
  https:
    address: :443
    forwardedHeaders:
      trustedIPs: *trustedIps
    http:
      tls:
        
        certResolver: letsencrypt
        domains:
          - main: lesableblanc-manambato.mg
            sans:
              - '*.lesableblanc-manambato.mg'
      middlewares:
        - securityHeaders@file

  # vpn:
  #   address: "10.0.1.1:80"
    

  # vpnsecure:
  #   address: "10.0.1.1:443"
#  kafdrop:
#    address: :9002
  kafka:
    address: :9092
#  flink:
#    address: :8081
metrics:
  prometheus:
    buckets: [0.1, 0.3, 1.2, 5.0]

providers:
  providersThrottleDuration: 2s

  # File provider for connecting things that are outside of docker / defining middleware
  file:
    filename: /etc/traefik/fileConfig.yml
    watch: true

  # Docker provider for connecting all apps that are inside of the docker network
  docker:
    watch: true
    network: proxy
    defaultRule: "Host(`{{ index .Labels \"com.docker.compose.service\"}}.lesableblanc-manambato.mg`)"
    # swarmModeRefreshSeconds: 15s
    exposedByDefault: false
    endpoint: "tcp://dockersocket:2375"


# Enable traefik ui
api:
  dashboard: true
  insecure: false

# Log level INFO|DEBUG|ERROR
log:
  level: DEBUG

certificatesResolvers:
  letsencrypt:
    acme:
      email: hasina.oely@gmail.com
      storage: /etc/traefik/acme.json
      #Pour tester avec l'environnement de staging Let's Encrypt
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory

      dnsChallenge:
        provider: cloudflare
        delayBeforeCheck: 0
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"





# Middlewares
middlewares:
  https-redirect:
    redirectScheme:
      scheme: https
      permanent: true

  ip-whitelist-vpn:
    ipWhiteList:
      sourceRange:
        - 10.8.0.0/24  # Plage IP WireGuard (VPN)
      deniedHandler:
        status: 403
        message: "Accès refusé, uniquement via le VPN."

